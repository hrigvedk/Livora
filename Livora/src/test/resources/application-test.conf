akka {
  actor {
    provider = "cluster"

    serialization-bindings {
      "org.livora.messages.Command" = jackson-json
    }

    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
    }
  }

  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 3800
    }

    transport = tcp
  }

  cluster {
    seed-nodes = []

    seed-node-timeout = 5s
    retry-unsuccessful-join-after = 3s

    auto-down-unreachable-after = 5s

    min-nr-of-members = 1

    roles = ["test-node"]

    failure-detector {
      acceptable-heartbeat-pause = 3 s
      hearbeat-interval = 1 s
      threshold = 8.0
    }
  }

  loglevel = "INFO"
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  log-dead-letters = 10
  log-dead-letters-during-shutdown = off

  coordinated-shutdown {
    terminate-actor-system = on
    exit-jvm = off
    run-by-actor-system-terminate = on

    phases {
      before-service-unbind {
        timeout = 1 s
      }
      service-unbind {
        timeout = 1 s
      }
      service-requests-done {
        timeout = 1 s
      }
      service-stop {
        timeout = 1 s
      }
      before-cluster-shutdown {
        timeout = 1 s
      }
      cluster-sharding-shutdown-region {
        timeout = 1 s
      }
      cluster-leave {
        timeout = 1 s
      }
      cluster-exiting {
        timeout = 1 s
      }
      cluster-exiting-done {
        timeout = 1 s
      }
      cluster-shutdown {
        timeout = 1 s
      }
      before-actor-system-terminate {
        timeout = 1 s
      }
      actor-system-terminate {
        timeout = 1 s
      }
    }
  }
}

akka.actor.testkit.typed {
  default-timeout = 5s
  system-shutdown-default-timeout = 10s

  filter-leeway = 3s
}